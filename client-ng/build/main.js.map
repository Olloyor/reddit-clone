{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.guard.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/profile/profile.component.ts","./src/app/auth/profile/profile.component.html","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/post/post-add/post-add.component.ts","./src/app/post/post-add/post-add.component.html","./src/app/post/post-tile/post-tile.component.ts","./src/app/post/post-tile/post-tile.component.html","./src/app/post/post-view/post-view.component.ts","./src/app/post/post-view/post-view.component.html","./src/app/services/auth.service.ts","./src/app/services/comment.service.ts","./src/app/services/post.service.ts","./src/app/services/vote.service.ts","./src/app/shared/not-found/not-found.component.ts","./src/app/shared/not-found/not-found.component.html","./src/app/shared/side-bar/side-bar.component.ts","./src/app/shared/side-bar/side-bar.component.html","./src/app/shared/vote-button/vote-button.component.ts","./src/app/shared/vote-button/vote-button.component.html","./src/app/store/auth.actions.ts","./src/app/store/auth.reducer.ts","./src/app/token-interceptor.ts","./src/app/utils/General.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {HomeComponent} from './home/home.component';\r\nimport {LoginComponent} from './auth/login/login.component';\r\nimport {RegisterComponent} from './auth/register/register.component';\r\nimport {PostAddComponent} from './post/post-add/post-add.component';\r\nimport {AuthGuard} from './auth/auth.guard';\r\nimport {PostViewComponent} from './post/post-view/post-view.component';\r\nimport {ProfileComponent} from './auth/profile/profile.component';\r\nimport {NotFoundComponent} from './shared/not-found/not-found.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'post/:id', component: PostViewComponent },\r\n  { path: 'profile/:id', component: ProfileComponent, canActivate: [AuthGuard] },\r\n  { path: 'post-add', component: PostAddComponent, canActivate: [AuthGuard] },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  {path: '404', component: NotFoundComponent},\r\n  {path: 'api/**', redirectTo: '/404'},\r\n  {path: '**', redirectTo: '/404'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {Component, OnInit} from '@angular/core';\nimport {Store, select} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {login, logout} from './store/auth.actions';\nimport {AuthService} from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n\n  title = 'Reddit Cli';\n\n  constructor(private authService: AuthService) {}\n\n  async ngOnInit() {\n    if (this.authService.getJwtToken()){\n      await this.authService.getUser();\n    }else {\n      this.authService.logoutMe();\n    }\n  }\n\n\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n\n","import {BrowserModule} from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {NgModule} from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport {RouterModule} from '@angular/router';\nimport {ReactiveFormsModule} from '@angular/forms';\n\nimport {StoreModule} from '@ngrx/store';\nimport {authReducer} from './store/auth.reducer';\n\nimport {AppComponent} from './app.component';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {TokenInterceptor} from './token-interceptor';\nimport {HeaderComponent} from './header/header.component';\nimport {LoginComponent} from './auth/login/login.component';\nimport {RegisterComponent} from './auth/register/register.component';\nimport { ProfileComponent } from './auth/profile/profile.component';\nimport { HomeComponent } from './home/home.component';\nimport { PostAddComponent } from './post/post-add/post-add.component';\nimport { PostViewComponent } from './post/post-view/post-view.component';\nimport { PostTileComponent } from './post/post-tile/post-tile.component';\nimport { SideBarComponent } from './shared/side-bar/side-bar.component';\nimport { VoteButtonComponent } from './shared/vote-button/vote-button.component';\nimport {ToastrModule} from 'ngx-toastr';\nimport { NotFoundComponent } from './shared/not-found/not-found.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    HomeComponent,\n    PostViewComponent,\n    PostAddComponent,\n    PostTileComponent,\n    SideBarComponent,\n    VoteButtonComponent,\n    NotFoundComponent,\n  ],\n  imports: [\n    BrowserModule,\n    // RouterModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    StoreModule.forRoot({auth: authReducer}),\n    ReactiveFormsModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  CanActivateChild,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  Router\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\nimport {select, Store} from '@ngrx/store';\r\nimport {MyState} from '../models/MyState';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate, CanActivateChild {\r\n  auth$: Observable<MyState>;\r\n\r\n  isAuth = false;\r\n\r\n  constructor(private store: Store<{ auth: MyState }>,\r\n              private authService: AuthService, private router: Router) {\r\n    this.auth$ = store.pipe(select('auth'));\r\n\r\n    this.auth$.subscribe((auth: MyState) => {\r\n      this.isAuth = auth.isAuthenticated;\r\n    });\r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n    if (this.isAuth) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  canActivateChild(childRoute: ActivatedRouteSnapshot,\r\n                   state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return  this.canActivate(childRoute, state);\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {Observable, throwError} from 'rxjs';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {LoginRequestPayload} from './login-request.payload';\nimport {ToastrService} from 'ngx-toastr';\nimport {AuthService} from '../../services/auth.service';\nimport {select, Store} from '@ngrx/store';\nimport {MyState} from '../../models/MyState';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  auth$: Observable<MyState>;\n  loginForm: FormGroup;\n  loginRequestPayload: LoginRequestPayload;\n  loginError = '';\n\n\n  constructor(private store: Store<{ auth: MyState }>, private authService: AuthService, private activatedRoute: ActivatedRoute,\n              private router: Router, private toaster: ToastrService) {\n    this.auth$ = store.pipe(select('auth'));\n    this.auth$.subscribe((auth: MyState) => {\n      if (auth.isAuthenticated) {\n        this.router.navigate(['/']);\n      }\n    });\n    this.loginRequestPayload = {\n      email: '',\n      password: ''\n    };\n  }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      email: new FormControl( this.loginRequestPayload.email,\n        [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n    console.log(this.loginForm.invalid);\n  }\n\n  login(): void {\n    this.loginError = '';\n    this.loginRequestPayload.email = this.loginForm.get('email').value;\n    this.loginRequestPayload.password = this.loginForm.get('password').value;\n\n    this.authService.login(this.loginRequestPayload).subscribe(data => {\n\n      this.router.navigate(['/']);\n      this.toaster.success('Login Successful');\n    }, error => {\n      console.log(error);\n      if (error.status === 400) {\n        this.loginError = error.error.error;\n        this.toaster.warning(error.error.error);\n      } else {\n        this.toaster.error('Login Failed! Please try again');\n        throwError(error);\n      }\n    });\n  }\n\n}\n","<div class=\" mt-5 py-4\">\n  <div class=\"row mr-0\">\n    <div class=\"col-12 col-sm-10 offset-sm-1 col-md-6 offset-md-3\">\n      <div class=\"card ml-2\">\n        <div class=\"card-header text-center\"><h5>Login or<a class=\"top-link\" routerLink=\"/register\"> Register</a></h5>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"error-wrap\" [style]=\"loginError?'display:block':'display:none'\">\n            <span class=\"text-center\">{{loginError}}</span>\n          </div>\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n            <div class=\"form-group row\">\n              <div class=\"col\">\n                <label for=\"email\" class=\" col-form-label\">Email</label>\n                <input type=\"text\"\n                       id=\"email\" class=\"form-control\"\n                       [formControlName]=\"'email'\"\n                       name=\"email\" required minlength=\"5\" maxlength=\"250\" autofocus>\n                <span class=\"text-danger\" *ngIf=\"loginForm.get('email').invalid && loginForm.get('email').touched\">\n                                   Please provide your email\n                </span>\n              </div>\n            </div>\n\n            <div class=\"form-group row\">\n              <div class=\"col\">\n                <label for=\"password\" class=\"col-form-label\">Password</label>\n                <input type=\"password\" id=\"password\" class=\"form-control\"\n                       [formControlName]=\"'password'\" name=\"password\" required minlength=\"5\">\n                <span class=\"text-danger\"\n                      *ngIf=\"loginForm.get('password').invalid && loginForm.get('password').touched\">\n                                  Password cannot be empty\n                </span>\n              </div>\n            </div>\n\n            <div class=\"form-group row\">\n              <div class=\"col my-2\">\n                <button [disabled]=\"loginForm.invalid\" style=\"height: 39px\" type=\"submit\"\n                        class=\"btn btn-info btn-block login\">Login\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n","import {Component, OnInit, OnDestroy} from '@angular/core';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\n\nimport {CommentService} from '../../services/comment.service';\nimport {PostService} from '../../services/post.service';\n\nimport {PostModel} from '../../models/post.model';\nimport {CommentModel} from '../../models/comment-model.payload';\nimport {AuthService} from '../../services/auth.service';\nimport {UserResponse} from '../../models/user-profile.payload';\nimport {select, Store} from '@ngrx/store';\nimport {MyState} from '../../models/MyState';\nimport {Observable, Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit, OnDestroy {\n  postsSubscription: Subscription;\n  commentsSubscription: Subscription;\n  auth$: Observable<MyState>;\n  id: string;\n  user: UserResponse;\n  posts: PostModel[];\n  comments: CommentModel[];\n  postLength = 0;\n  commentLength = 0;\n\n  constructor(private store: Store<{ auth: MyState }>, private activatedRoute: ActivatedRoute,\n              private postService: PostService, private commentService: CommentService) {\n    this.auth$ = store.pipe(select('auth'));\n    this.auth$.subscribe((auth) => {\n      this.user = auth.user;\n    });\n    this.id = this.activatedRoute.snapshot.params.id;\n    this.getAllPosts();\n    this.getAllComments();\n  }\n\n  getAllPosts() {\n    this.postsSubscription = this.postService.getAllPostsByUser(this.id).subscribe(data => {\n      this.posts = data;\n      this.postLength = data.length;\n    });\n  }\n  getAllComments() {\n    this.commentsSubscription = this.commentService.getAllCommentsByUser(this.id).subscribe(data => {\n      this.comments = data;\n      this.commentLength = data.length;\n    });\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.params\n      .subscribe(\n        (params: Params) => {\n          this.id = params['id'];\n          this.getAllPosts();\n          this.getAllComments();\n        }\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.postsSubscription.unsubscribe();\n    this.commentsSubscription.unsubscribe();\n  }\n\n}\n","<div class=\"container mt-5 py-3\">\n  <div>\n    <h5 *ngIf=\"this.user && this.user._id === this.id; else not\">Welcome\n      <b>{{ user !== undefined ? user.name : 'back'}}</b>.</h5>\n    <ng-template #not>\n      <h5>{{commentLength > 0 ? comments[0].creatorName : postLength > 0 ? posts[0].creatorName : 'Great poster'}}'s\n        profile</h5></ng-template>\n    <br/>\n    {{ user !== undefined && this.user._id === this.id ? 'You have' : postLength > 0 ? posts[0].creatorName : commentLength > 0 ? comments[0].creatorName : ''}}\n    posted <b>{{postLength}}</b> time(s)\n    and commented\n    <b>{{commentLength}}</b> time(s).\n  </div>\n  <hr/>\n  <div>\n    All Posts: {{postLength}}\n  </div>\n  <app-post-tile *ngIf=\"postLength > 0\" [posts]=\"posts\"></app-post-tile>\n  <hr/>\n  <div>\n    All Comments: {{commentLength}}\n  </div>\n  <div *ngIf=\"commentLength > 0; else noComments\">\n    <div *ngFor=\"let comment of comments\" class=\"comment m-1\">\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <a routerLink=\"/post/{{comment.post}}\">Post Link</a>\n        </div>\n        <div class=\"col-6 text-right\">\n          <p>{{comment.createdAt.substring(0, 10)}}</p>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <b>{{comment.text}}</b>\n        </div>\n      </div>\n    </div>\n    <hr/>\n  </div>\n  <ng-template #noComments>\n    <h5 class=\"m-1 text-muted text-center\">No Comments</h5>\n  </ng-template>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {ToastrService} from 'ngx-toastr';\nimport {RegisterRequestPayload} from './register-request.payload';\nimport {AuthService} from '../../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerRequestPayload: RegisterRequestPayload;\n  registerForm: FormGroup;\n\n  constructor(private authService: AuthService, private router: Router,\n              private toaster: ToastrService) {\n    this.registerRequestPayload = {\n      name: '',\n      email: '',\n      password: ''\n    };\n  }\n\n  ngOnInit(): void {\n    this.registerForm = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(2),\n                      Validators.maxLength(50)] ),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(5)]),\n    });\n  }\n\n  register(): void {\n    this.registerRequestPayload.email = this.registerForm.get('email').value;\n    this.registerRequestPayload.name = this.registerForm.get('name').value;\n    this.registerRequestPayload.password = this.registerForm.get('password').value;\n\n    this.authService.register(this.registerRequestPayload).subscribe(data => {\n      this.router.navigateByUrl('/');\n    }, error => {\n      console.log(error);\n      if (error.status === 400) {\n        this.toaster.warning(error.error.error);\n      } else {\n        this.toaster.error('Registration Failed! Please try again');\n      }\n    });\n  }\n\n}\n","<div class=\"main-section mt-5 py-4\">\n  <div class=\"row mr-0\">\n    <div class=\"col-12 col-sm-10 offset-sm-1 col-md-6 offset-md-3\">\n      <div class=\"card\">\n        <div class=\"card-header text-center\">\n          <h5>Register or <a class=\"top-link\" routerLink=\"/login\"> Log In</a></h5>\n        </div>\n        <div class=\"card-body\">\n          <form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\n            <div class=\"form-group row\">\n              <div class=\"col\">\n                <label class=\"col-form-label\"><span class=\"text-danger\"> *</span> Name</label>\n                <input type=\"text\" [formControlName]=\"'name'\"\n                       class=\"form-control\" name=\"name\"\n                       minlength=\"2\"\n                       maxlength=\"50\"\n                       required autofocus\n                >\n                <span class=\"text-danger\" *ngIf=\"registerForm.get('name').invalid && registerForm.get('name').touched\">\n                                    Required. Between (2 and 50) characters\n                </span>\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <div class=\"col\">\n                <label for=\"email\" class=\"col-form-label\"><span class=\"text-danger\"> *</span> Email</label>\n                <input type=\"text\" [formControlName]=\"'email'\" class=\"form-control\"\n                       id=\"email\"\n                       name=\"email\"\n                       required autofocus\n                >\n                <span class=\"text-danger\" *ngIf=\"registerForm.get('email').invalid && registerForm.get('email').touched\">\n                                    Please provide valid email\n                </span>\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <div class=\"col\">\n                <label for=\"password\" class=\"col-form-label\"><span class=\"text-danger\"> *</span> Password</label>\n                <input type=\"password\" [formControlName]=\"'password'\" class=\"form-control\"\n                       id=\"password\"\n                       name=\"password\"\n                       minlength=\"5\"\n                       required>\n                <span class=\"text-danger\" *ngIf=\"registerForm.get('password').invalid && registerForm.get('password').touched\">\n                                    Required. Minimum 5 characters\n                </span>\n              </div>\n            </div>\n\n            <div class=\"form-group row\">\n              <div class=\"col my-2\">\n                <button [disabled]=\"registerForm.invalid\" style=\"height: 39px\" type=\"submit\" class=\"btn btn-info btn-block sign-up\"> Register</button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {select, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {AuthService} from '../services/auth.service';\nimport {logout} from '../store/auth.actions';\nimport {UserResponse} from '../models/user-profile.payload';\nimport {MyState} from '../models/MyState';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  auth$: Observable<MyState>;\n  isAuth = false;\n  user: UserResponse;\n\n  constructor(private router: Router, private store: Store<{ auth: MyState }>, private authService: AuthService) {\n    this.auth$ = store.pipe(select('auth'));\n    this.auth$.subscribe((auth) => {\n      this.isAuth = auth.isAuthenticated;\n      this.user = auth.user;\n    });\n  }\n\n  ngOnInit(): void {\n    this.authService.user.subscribe((data: UserResponse) => this.user = data);\n  }\n\n  goToUserProfile() {\n    this.router.navigateByUrl('/profile/' + this.user._id );\n  }\n\n  logout() {\n    this.authService.logoutMe();\n    this.store.dispatch(logout());\n    this.router.navigateByUrl('');\n  }\n\n}\n","<header>\n  <nav class=\"navbar fixed-top navbar-expand-lg navbar-light bg-light\">\n    <div class=\"flex-grow-1\">\n      <a aria-label=\"Home\" class=\"logo\" routerLink=\"/\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" class=\"reddit-icon-svg\">\n          <g>\n            <circle fill=\"#FF4500\" cx=\"10\" cy=\"10\" r=\"10\"></circle>\n            <path fill=\"#FFF\"\n                  d=\"M16.67,10A1.46,1.46,0,0,0,14.2,9a7.12,7.12,0,0,0-3.85-1.23L11,4.65,13.14,5.1a1,1,0,1,0,.13-0.61L10.82,4a0.31,0.31,0,0,0-.37.24L9.71,7.71a7.14,7.14,0,0,0-3.9,1.23A1.46,1.46,0,1,0,4.2,11.33a2.87,2.87,0,0,0,0,.44c0,2.24,2.61,4.06,5.83,4.06s5.83-1.82,5.83-4.06a2.87,2.87,0,0,0,0-.44A1.46,1.46,0,0,0,16.67,10Zm-10,1a1,1,0,1,1,1,1A1,1,0,0,1,6.67,11Zm5.81,2.75a3.84,3.84,0,0,1-2.47.77,3.84,3.84,0,0,1-2.47-.77,0.27,0.27,0,0,1,.38-0.38A3.27,3.27,0,0,0,10,14a3.28,3.28,0,0,0,2.09-.61A0.27,0.27,0,1,1,12.48,13.79Zm-0.18-1.71a1,1,0,1,1,1-1A1,1,0,0,1,12.29,12.08Z\">\n            </path>\n          </g>\n        </svg>\n        <span class=\"reddit-text\">\n                    Reddit Clone\n                </span>\n      </a>\n    </div>\n    <div class=\"flex-grow-1 float-right\">\n      <div *ngIf=\"isAuth; else elseBlock\" class=\"dropdown float-right\">\n        <button class=\"user-details dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          <img class=\"account-icon\" src=\"https://www.redditstatic.com/avatars/avatar_default_08_D4E815.png\"/>\n          {{user ? user.name : 'Welcome'}}\n        </button>\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n          <button (click)=\"goToUserProfile()\" class=\"dropdown-item\">\n            <svg width=\"1rem\" height=\"1rem\" viewBox=\"0 0 16 16\" class=\"bi bi-person\" fill=\"currentColor\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n              <path fill-rule=\"evenodd\"\n                    d=\"M10 5a2 2 0 1 1-4 0 2 2 0 0 1 4 0zM8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm6 5c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\"/>\n            </svg>\n            Profile\n          </button>\n          <button (click)=\"logout()\" class=\"dropdown-item\">\n            <svg width=\"1rem\" height=\"1rem\" viewBox=\"0 0 16 16\" class=\"bi bi-box-arrow-right\" fill=\"currentColor\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n              <path fill-rule=\"evenodd\"\n                    d=\"M10 12.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2a.5.5 0 0 0 1 0v-2A1.5 1.5 0 0 0 9.5 2h-8A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-2a.5.5 0 0 0-1 0v2z\"/>\n              <path fill-rule=\"evenodd\"\n                    d=\"M15.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708.708L14.293 7.5H5.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3z\"/>\n            </svg>\n            Logout\n          </button>\n        </div>\n      </div>\n      <ng-template #elseBlock>\n        <div>\n          <a routerLink=\"/register\" class=\"float-right sign-up mr-2\">Register</a>\n          <a routerLink=\"/login\" class=\"float-right login mr-2\">Login</a>\n        </div>\n      </ng-template>\n    </div>\n  </nav>\n</header>\n","import { Component, OnInit } from '@angular/core';\nimport {PostModel} from '../models/post.model';\nimport {PostService} from '../services/post.service';\nimport {login, logout} from '../store/auth.actions';\nimport {Observable} from 'rxjs';\nimport {select, Store} from '@ngrx/store';\nimport {AuthService} from '../services/auth.service';\nimport {MyState} from '../models/MyState';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  auth$: Observable<MyState>;\n  isAuth = false;\n\n  posts: Array<PostModel> = [];\n\n  constructor(private store: Store<{ auth: MyState }>, private postService: PostService, private authService: AuthService) {\n    this.auth$ = store.pipe(select('auth'));\n\n    this.auth$.subscribe((auth: MyState) => {\n      this.isAuth = auth.isAuthenticated;\n    });\n    this.postService.getAllPosts().subscribe(post => {\n      this.posts = post;\n    }, error => {\n      if (error.status === 0){\n        console.log('No Internet');\n        return;\n      }\n    });\n    if (this.isAuth){\n      this.authService.getUser();\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"reddit-body mt-5\">\n  <div class=\"container pt-4\">\n    <div class=\"row\">\n      <hr />\n      <div class=\"col-md-9\">\n        <app-post-tile [posts]=\"posts\"></app-post-tile>\n      </div>\n      <div class=\"col-md-3\">\n        <app-side-bar></app-side-bar>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {PostService} from '../../services/post.service';\nimport {ToastrService} from 'ngx-toastr';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AddPostPayload} from '../../models/add-post.payload';\nimport {throwError} from 'rxjs';\n\n@Component({\n  selector: 'app-post-add',\n  templateUrl: './post-add.component.html',\n  styleUrls: ['./post-add.component.css']\n})\nexport class PostAddComponent implements OnInit {\n\n  createPostForm: FormGroup;\n  postPayload: AddPostPayload;\n\n  constructor(private router: Router, private postService: PostService, private toaster: ToastrService) {\n    this.postPayload = {\n      name: '',\n      description: '',\n    };\n  }\n\n  ngOnInit() {\n    this.createPostForm = new FormGroup({\n      name: new FormControl('', [Validators.required,\n        Validators.minLength(5), Validators.maxLength(50)]),\n      description: new FormControl('', [Validators.required,\n        Validators.minLength(15), Validators.maxLength(1500)]),\n    });\n  }\n\n  isBtnDisabled(): boolean {\n    return this.createPostForm.invalid;\n  }\n\n  createPost() {\n    this.postPayload.name = this.createPostForm.get('name').value;\n    this.postPayload.description = this.createPostForm.get('description').value;\n\n    this.postService.createPost(this.postPayload).subscribe((data) => {\n      this.toaster.success('Post Added');\n      this.router.navigateByUrl('/post/' + data._id);\n    }, error => {\n      console.log(error);\n      if (error.status === 400) {\n        this.toaster.warning(error.error.error);\n        return;\n      }\n      this.toaster.error('Error occurred');\n      throwError(error);\n    });\n  }\n\n  discardPost() {\n    this.router.navigateByUrl('/');\n  }\n}\n","<div class=\"container mt-5\">\n  <div class=\"row py-4\">\n    <div class=\"col-12 col-md-8 offset-md-2\">\n      <form class=\"card p-4\" [formGroup]=\"createPostForm\" (ngSubmit)=\"createPost()\">\n        <div class=\"form-group\">\n          <h4 class=\"text-center\">Create Post</h4>\n          <hr/>\n          <div class=\"row\">\n            <div class=\"col-12 col-md-12\">\n              <label for=\"name\"><span class=\"text-danger\">*</span> Post Title</label>\n              <input type=\"text\" [formControlName]=\"'name'\" class=\"form-control mt-2\"\n                     id=\"name\"\n                     name=\"name\"\n                     placeholder=\"Title\"\n                     required\n                     minlength=\"5\"\n                     maxlength=\"50\"\n              />\n              <span class=\"text-danger\">{{createPostForm.get('name').invalid?'Required. Length between(5 and 50) characters':''}}</span>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-12 col-md-12 mt-3\">\n              <label for=\"description\"><span class=\"text-danger\">*</span>  Description</label>\n              <textarea type=\"text\" [formControlName]=\"'description'\" class=\"form-control mt-2 add-post-textarea\"\n                        id=\"description\"\n                        name=\"description\"\n                        placeholder=\"Description\"\n                        minLength=\"15\"\n                        maxlength=\"1500\"\n                        required\n              >\n              </textarea>\n              <span class=\"text-danger\">{{createPostForm.get('description').invalid&& createPostForm.touched?'Required. Length between(15 and 1500) characters':''}}</span>\n            </div>\n          </div>\n          <div class=\"row mt-2\">\n            <div class=\"col-6 col-md-6 mt-2\">\n              <button (click)=\"discardPost()\" class=\"btn btn-sm btn-block btn-outline-danger\">CANCEL</button>\n            </div>\n            <div class=\"col-6 col-md-6 mt-2\">\n              <button class=\"btn btn-block btn-sm btn-primary\"\n                      [disabled]=\"isBtnDisabled()\"\n              >\n                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-check-circle-fill\" fill=\"currentColor\"\n                     xmlns=\"http://www.w3.org/2000/svg\">\n                  <path fill-rule=\"evenodd\"\n                        d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\"/>\n                </svg>\n                POST\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit, ViewEncapsulation, Input} from '@angular/core';\nimport {PostModel} from '../../models/post.model';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-post-tile',\n  templateUrl: './post-tile.component.html',\n  styleUrls: ['./post-tile.component.css'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PostTileComponent implements OnInit {\n\n  faComments = '';\n  @Input() posts: PostModel[];\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  goToPost(id: string): void {\n    this.router.navigateByUrl('/post/' + id);\n  }\n\n}\n","<!-- Display Posts-->\n<div class=\"row post\" *ngFor=\"let post of posts\">\n  <div class=\"col-2 col-md-1\">\n    <app-vote-button [post]=\"post\"></app-vote-button>\n  </div>\n  <!-- Section to Display Post Information-->\n  <div class=\"col-10 col-md-11 post-text-wrap\">\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n            <span class=\"post-owner\"> Posted by\n              <a class=\"username\" routerLink=\"/profile/{{post.user}}\">{{post.creatorName}}</a>\n            </span>\n      </div>\n      <div class=\"col-md-6 text-right\">\n        <span class=\"text-right post-date\">{{post.createdAt.substring(0,10)}}</span>\n      </div>\n    </div>\n    <hr/>\n    <div class=\"post-title\">\n      <a class=\"post-name\" routerLink=\"/post/{{post._id}}\">{{post.name}}</a>\n    </div>\n    <div class=\"\">\n      <p class=\"post-text\" [innerHtml]=\"post.description\"></p>\n    </div>\n  </div>\n  <div class=\"col\">\n    <hr/>\n    <span>\n      <a class=\"btn-commment\" role=\"button\" (click)=\"goToPost(post._id)\">\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-chat-right-dots\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path fill-rule=\"evenodd\" d=\"M2 1h12a1 1 0 0 1 1 1v11.586l-2-2A2 2 0 0 0 11.586 11H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zm12-1a2 2 0 0 1 2 2v12.793a.5.5 0 0 1-.854.353l-2.853-2.853a1 1 0 0 0-.707-.293H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h12z\"/>\n  <path d=\"M5 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\n</svg>\n        Comments({{post.commentCount}})\n      </a>\n      <button class=\"btn btn-sm btn-info ml-2 float-right\" (click)=\"goToPost(post._id)\">\n        Read Post\n      </button>\n    </span>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {PostModel} from '../../models/post.model';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {CommentModel} from '../../models/comment-model.payload';\nimport {PostService} from '../../services/post.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ToastrService} from 'ngx-toastr';\nimport {CommentService} from '../../services/comment.service';\nimport {Subscription, throwError} from 'rxjs';\n\n@Component({\n  selector: 'app-post-view',\n  templateUrl: './post-view.component.html',\n  styleUrls: ['./post-view.component.css']\n})\nexport class PostViewComponent implements OnInit, OnDestroy {\n  postSubscription: Subscription;\n  commentSubscription: Subscription;\n\n  postId: string;\n  post: PostModel;\n  commentForm: FormGroup;\n  commentPayload: CommentModel;\n  comments: CommentModel[];\n\n  constructor(private postService: PostService, private activateRoute: ActivatedRoute,\n              private commentService: CommentService, private toaster: ToastrService, private router: Router) {\n    this.postId = this.activateRoute.snapshot.params.id;\n\n    this.commentForm = new FormGroup({\n      text: new FormControl('', Validators.required)\n    });\n    this.commentPayload = {\n      text: '',\n      post: this.postId\n    };\n    this.getPostById();\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    this.postSubscription.unsubscribe();\n    this.commentSubscription.unsubscribe();\n  }\n\n  postComment(): any {\n    this.commentPayload.text = this.commentForm.get('text').value;\n    this.commentService.postComment(this.commentPayload).subscribe(data => {\n      console.log(data);\n      this.commentForm.get('text').setValue('');\n      this.getCommentsForPost();\n    }, error => {\n      if (error.status === 401) {\n        this.toaster.info('Login/Register for comment');\n        return;\n      }\n      this.toaster.error(error.error.error);\n      // throwError(error);\n    });\n  }\n\n  private getPostById() {\n    this.postSubscription = this.postService.getPost(this.postId).subscribe(data => {\n      this.post = data;\n      this.getCommentsForPost();\n    }, error => {\n      console.log(error);\n      if (error.status === 400){\n        this.router.navigateByUrl('/404');\n      }\n      throwError(error);\n    });\n  }\n\n  private getCommentsForPost(): void {\n    this.commentSubscription = this.commentService.getAllCommentsForPost(this.postId).subscribe(data => {\n      this.comments = data;\n    }, error => {\n      if (error.status === 404){\n        return false;\n      }\n      throwError(error);\n    });\n  }\n\n}\n","<div class=\"container mt-5 py-4\">\n  <div class=\"row\">\n    <div class=\"col-md-9\">\n      <div class=\"row post\">\n        <div class=\"col-2 col-md-1\">\n          <app-vote-button [post]=\"post\"></app-vote-button>\n        </div>\n        <div class=\"col-10 col-md-11\">\n          <div class=\"row\">\n            <div class=\"col-md-8\">\n            <span> Posted by\n              <a class=\"username\" routerLink=\"/profile/{{post? post.user:''}}\">{{post?post.creatorName:''}}</a>\n            </span>\n            </div>\n            <div class=\"offset-md-2 col-md-2 \">\n              <span class=\"text-right\">{{post? post.createdAt.substring(0, 10): '2020-01-01'}}</span>\n            </div>\n          </div>\n          <hr/>\n          <a class=\"post-title\">{{post? post.name: ''}}</a>\n          <div>\n            <p class=\"post-text\" [innerHtml]=\"post?post.description:''\"></p>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <div class=\"post-comment\">\n            <form [formGroup]=\"commentForm\" (ngSubmit)=\"postComment()\">\n              <div class=\"form-group\">\n                <textarea class=\"form-control\" [formControlName]=\"'text'\" placeholder=\"Your Thoughts?\"></textarea>\n              </div>\n              <button type=\"submit\" class=\"btn btn-info float-right\">Comment</button>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"comments && comments.length > 0; else noComments\" class=\"mt-3\">\n        <div *ngFor=\"let comment of comments\" class=\"comment m-1\">\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <a routerLink=\"/profile/{{comment.user}}\">By {{comment.creatorName}}</a>\n            </div>\n            <div class=\"col-6 text-right\">\n              <p>{{comment.createdAt.substring(0, 10)}}</p>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col\">\n              <b>{{comment.text}}</b>\n            </div>\n          </div>\n        </div>\n        <hr/>\n      </div>\n    </div>\n    <ng-template #noComments>\n      <h5 class=\"mt-3 text-muted text-center\">No Comments</h5>\n    </ng-template>\n    <div class=\"col-md-3\">\n      <app-side-bar></app-side-bar>\n    </div>\n  </div>\n</div>\n\n","import {EventEmitter, Injectable, Output} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {map, tap} from 'rxjs/operators';\r\n\r\nimport {RegisterRequestPayload} from '../auth/register/register-request.payload';\r\nimport {LoginRequestPayload} from '../auth/login/login-request.payload';\r\nimport {AuthResponse} from '../models/auth-response.payload';\r\n\r\nimport {General} from '../utils/General';\r\nimport {UserResponse} from '../models/user-profile.payload';\r\nimport {select, Store} from '@ngrx/store';\r\nimport {setUser, login, logout} from '../store/auth.actions';\r\nimport {MyState} from '../models/MyState';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  auth$: Observable<MyState>;\r\n\r\n  @Output() isAuthenticated: EventEmitter<boolean> = new EventEmitter();\r\n  @Output() user: EventEmitter<UserResponse> = new EventEmitter();\r\n\r\n  readonly baseUrl = General.URL;\r\n  readonly tokenName = 'authToken';\r\n\r\n  constructor(private store: Store<MyState>, private httpClient: HttpClient) {\r\n\r\n  }\r\n\r\n  register(registerRequestPayload: RegisterRequestPayload): Observable<AuthResponse> {\r\n    return this.httpClient.post<AuthResponse>(this.baseUrl + '/api/auth/register', registerRequestPayload)\r\n      .pipe(map(data => {\r\n        console.log(data);\r\n        localStorage.setItem(this.tokenName, data.accessToken);\r\n        this.store.dispatch(login());\r\n        this.isAuthenticated.emit(true);\r\n\r\n        return data;\r\n      }));\r\n  }\r\n\r\n  login(loginRequestPayload: LoginRequestPayload): Observable<AuthResponse> {\r\n    return this.httpClient.post<AuthResponse>(this.baseUrl + '/api/auth/login', loginRequestPayload)\r\n      .pipe(map(data => {\r\n\r\n        localStorage.setItem(this.tokenName, data.accessToken);\r\n        this.store.dispatch(login());\r\n        this.isAuthenticated.emit(true);\r\n        return data;\r\n      }));\r\n  }\r\n\r\n\r\n  getUser() {\r\n    this.httpClient.get<UserResponse>(this.baseUrl + '/api/user/me')\r\n      .subscribe(data => {\r\n        this.store.dispatch(login());\r\n        this.store.dispatch(setUser({user: data}));\r\n        this.user.emit(data);\r\n      }, error => {\r\n        console.log(error);\r\n        if (error.status === 400 || error.status === 401) {\r\n          console.log(this.getJwtToken());\r\n          this.logoutMe();\r\n        }\r\n        if (error.status === 0) {\r\n          return false;\r\n        }\r\n        localStorage.removeItem(this.tokenName);\r\n      });\r\n  }\r\n\r\n  getJwtToken(): any {\r\n    return localStorage.getItem(this.tokenName);\r\n  }\r\n\r\n  logoutMe() {\r\n    localStorage.setItem(this.tokenName, null);\r\n    localStorage.removeItem(this.tokenName);\r\n    this.store.dispatch(logout());\r\n    // this.httpClient.post(this.baseUrl + '/api/auth/logout',\r\n    //   {responseType: 'text'})\r\n    //   .subscribe(data => {\r\n    //     console.log(data);\r\n    //   }, error => {\r\n    //     throwError(error);\r\n    //   });\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {CommentModel} from '../models/comment-model.payload';\r\nimport {Observable} from 'rxjs';\r\nimport {General} from '../utils/General';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommentService {\r\n\r\n  baseUrl = General.URL;\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  getAllCommentsForPost(postId: string): Observable<CommentModel[]> {\r\n    return this.httpClient.get<CommentModel[]>(this.baseUrl + '/api/comment/by_post/' + postId);\r\n  }\r\n\r\n  getAllCommentsByUser(_id: string) {\r\n    return this.httpClient.get<CommentModel[]>(this.baseUrl + '/api/comment/by_user/' + _id);\r\n  }\r\n\r\n  postComment(commentPayload: CommentModel): Observable<any> {\r\n    return this.httpClient.post<any>(this.baseUrl + '/api/comment/create', commentPayload);\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {PostModel} from '../models/post.model';\r\nimport {Observable} from 'rxjs';\r\nimport {AddPostPayload} from '../models/add-post.payload';\r\nimport {General} from '../utils/General';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PostService {\r\n\r\n  baseUrl = General.URL;\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllPosts(): Observable<Array<PostModel>> {\r\n    return this.http.get<Array<PostModel>>(this.baseUrl + '/api/post/all');\r\n  }\r\n\r\n  createPost(postPayload: AddPostPayload): Observable<any> {\r\n    return this.http.post(this.baseUrl + '/api/post/add', postPayload);\r\n  }\r\n\r\n  getPost(id: string): Observable<PostModel> {\r\n    return this.http.get<PostModel>(this.baseUrl + '/api/post/' + id);\r\n  }\r\n\r\n  getAllPostsByUser(_id: string): Observable<PostModel[]> {\r\n    return this.http.get<PostModel[]>(this.baseUrl + '/api/post/by_user/' + _id);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {VoteModel} from '../models/vote-model.payload';\r\nimport {Observable} from 'rxjs';\r\nimport {General} from '../utils/General';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VoteService {\r\n\r\n  baseUrl = General.URL;\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  vote(votePayload: VoteModel): Observable<any> {\r\n    return this.http.post(this.baseUrl + '/api/vote/', votePayload);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"not-found-page\">\n      <h2 class=\"not-found-code\">404</h2>\n      <p class=\"not-found-text\">Not Found</p>\n      <button class=\"btn btn-outline-primary\" routerLink=\"/\">HOME</button>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {ToastrService} from 'ngx-toastr';\nimport {PostService} from '../../services/post.service';\nimport {AuthService} from '../../services/auth.service';\nimport {select, Store} from '@ngrx/store';\nimport {MyState} from '../../models/MyState';\nimport {Observable} from 'rxjs';\n\n@Component({\n  selector: 'app-side-bar',\n  templateUrl: './side-bar.component.html',\n  styleUrls: ['./side-bar.component.css']\n})\nexport class SideBarComponent implements OnInit {\n  auth$: Observable<MyState>;\n  isAuth = false;\n\n  constructor(private store: Store<{ auth: MyState }>, private router: Router, private toaster: ToastrService) {\n    this.auth$ = store.pipe(select('auth'));\n\n    this.auth$.subscribe((auth: MyState) => {\n      this.isAuth = auth.isAuthenticated;\n    });\n  }\n\n  ngOnInit() {}\n\n  goToCreatePost() {\n    // if (!this.isLoggedIn) {\n    //   this.toaster.warning('Login/Register first');\n    // }\n    this.router.navigateByUrl('/post-add');\n  }\n\n}\n","<div *ngIf=\"isAuth\" class=\"sidebar\">\n  <img class=\"img-fluid\" src=\"https://www.redditstatic.com/desktop2x/img/id-cards/home-banner@2x.png\">\n  <div class=\"text-center mt-2\">Welcome to Reddit Clone Home Page. Come here to\n    check in with your favorite posts.</div>\n  <div class=\"create-post\">\n    <button class=\"create-post-btn\" (click)=\"goToCreatePost()\">Create Post</button>\n  </div>\n\n</div>\n\n<div *ngIf=\"isAuth\" class=\"create-post-wrap-sm\">\n  <button class=\"create-post-btn\" (click)=\"goToCreatePost()\">\n    <svg width=\"1.5rem\" height=\"1.5rem\" viewBox=\"0 0 16 16\" class=\"bi bi-plus\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill-rule=\"evenodd\" d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\n    </svg> Add Post</button>\n</div>\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {PostModel} from '../../models/post.model';\nimport {VoteModel} from '../../models/vote-model.payload';\nimport {VoteService} from '../../services/vote.service';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../services/auth.service';\nimport {PostService} from '../../services/post.service';\nimport {ToastrService} from 'ngx-toastr';\nimport {Observable, Subscription} from 'rxjs';\nimport {select, Store} from '@ngrx/store';\nimport {MyState} from '../../models/MyState';\n\n@Component({\n  selector: 'app-vote-button',\n  templateUrl: './vote-button.component.html',\n  styleUrls: ['./vote-button.component.css']\n})\nexport class VoteButtonComponent implements OnInit, OnDestroy {\n  postSubscription: Subscription;\n  voteSubscription: Subscription;\n\n  auth$: Observable<MyState>;\n  isAuth = false;\n\n  @Input() post: PostModel;\n  votePayload: VoteModel;\n  upvoteColor: string;\n  downvoteColor: string;\n\n\n  constructor(private voteService: VoteService, private router: Router,\n              private authService: AuthService, private store: Store<{ auth: MyState }>,\n              private postService: PostService, private toaster: ToastrService) {\n    this.auth$ = store.pipe(select('auth'));\n\n    this.auth$.subscribe((auth: MyState) => {\n      this.isAuth = auth.isAuthenticated;\n    });\n\n    this.votePayload = {\n      voteType: undefined,\n      postId: undefined\n    };\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  ngOnDestroy(): void {\n    // this.postSubscription.unsubscribe();\n    // this.voteSubscription.unsubscribe();\n  }\n\n  upVotePost(): void {\n    this.votePayload.voteType = 1;\n    this.downvoteColor = '';\n    this.vote();\n  }\n\n  downVotePost(): void {\n    this.votePayload.voteType = -1;\n    this.upvoteColor = '';\n    this.vote();\n  }\n\n  private vote(): any {\n\n    if (this.isAuth) {\n      this.votePayload.postId = this.post._id;\n      this.voteSubscription = this.voteService.vote(this.votePayload).subscribe(() => {\n        this.updateVoteDetails(this.votePayload.postId);\n      }, error => {\n        if (error.status === 401) {\n          this.toaster.info('Login/Register for vote');\n          // this.router.navigateByUrl('/login');\n          return;\n        }\n        this.toaster.error(error.error.message);\n      });\n    } else {\n      this.toaster.warning('Please login for vote');\n    }\n  }\n\n  private updateVoteDetails(postId: string): void {\n    // console.log(this)\n    this.postSubscription = this.postService.getPost(postId).subscribe(post => {\n      this.post = post;\n    });\n  }\n}\n","<!-- Section to Display Votes-->\n<div>\n  <div class=\"d-flex flex-column vote-box\">\n    <div class=\"p-2\">\n      <svg (click)=\"upVotePost()\" class=\"bi bi-arrow-up up-vote\" [style.color]=\"post && post.upVote ? 'green':''\"\n        width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"  fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" d=\"M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z\"/>\n      </svg>\n    </div>\n    <div class=\"p-2 vote-count\">{{post?post.voteCount: '0'}}</div>\n    <div class=\"p-2\">\n      <svg (click)=\"downVotePost()\" class=\"bi bi-arrow-down down-vote\" [style.color]=\"post && post.downVote ? 'red':''\"\n        width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" d=\"M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z\"/>\n      </svg>\n    </div>\n  </div>\n</div>\n","import {createAction, props} from '@ngrx/store';\r\nimport {UserResponse} from '../models/user-profile.payload';\r\n\r\nexport const login = createAction('[Auth Component] Auth');\r\nexport const logout = createAction('[Auth Component] Logout');\r\n\r\nexport const setUser = createAction('[User Component] User', props<{ user: UserResponse }>());\r\n","import {Action, createReducer, on, State} from '@ngrx/store';\r\nimport * as AuthAction from './auth.actions';\r\nimport {MyState} from '../models/MyState';\r\n\r\n\r\n\r\nexport const initialState: MyState = {\r\n  isAuthenticated: false,\r\n  user: null\r\n};\r\n\r\nconst _authReducer = createReducer(\r\n  initialState,\r\n  on(AuthAction.login, (state) => ({...state, isAuthenticated: true})),\r\n  on(AuthAction.logout, (state) => ({...state, isAuthenticated: false, user: null})),\r\n  on(AuthAction.setUser, (state, {user}) => ({...state, isAuthenticated: true, user}))\r\n);\r\n\r\nexport function authReducer(state: MyState, action: Action) {\r\n  return _authReducer(state, action);\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse} from '@angular/common/http';\r\nimport {Observable, BehaviorSubject, throwError} from 'rxjs';\r\nimport {AuthService} from './services/auth.service';\r\nimport {catchError, switchMap, take, filter} from 'rxjs/operators';\r\nimport {AuthResponse} from './models/auth-response.payload';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n  isAuth = false;\r\n  refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject(null);\r\n\r\n  constructor(public authService: AuthService) {\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler):\r\n    Observable<HttpEvent<any>> {\r\n\r\n    if (req.url.indexOf('register') !== -1 || req.url.indexOf('login') !== -1) {\r\n      return next.handle(req);\r\n    }\r\n    const jwtToken = this.authService.getJwtToken();\r\n\r\n    if (jwtToken) {\r\n      return next.handle(this.addToken(req, jwtToken)).pipe(catchError(error => {\r\n        if (error instanceof HttpErrorResponse && (error.status === 401 || error.status === 400)) {\r\n          return this.handleAuthErrors(req, next);\r\n        } else {\r\n          return throwError(error);\r\n        }\r\n      }));\r\n    }\r\n    return next.handle(req);\r\n\r\n  }\r\n\r\n  private handleAuthErrors(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return this.refreshTokenSubject.pipe(\r\n      filter(result => result !== null),\r\n      take(1),\r\n      switchMap((res) => {\r\n        return next.handle(this.addToken(req,\r\n          this.authService.getJwtToken()));\r\n      })\r\n    );\r\n  }\r\n\r\n  addToken(req: HttpRequest<any>, jwtToken: any) {\r\n    return req.clone({\r\n      headers: req.headers.set('Authorization',\r\n        'Bearer ' + jwtToken)\r\n    });\r\n  }\r\n\r\n}\r\n","export class General {\r\n  public static URL = 'http://10.10.10.10:5000';\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}